[{"judul":"Berbagai Jokes Yang Muncul Setelah Errornya Server Google","isi":"Kemaren malam, terjadi error di berbagai layanan Google, sebagaimana di screenshot di bawah ini:\nErrornya berbagai layanan Google ini merupakan peristiwa yang sangat langka dan kayaknya nggak pernah terjadi selama ini. Maka, banyak akun-akun yang membuat berbagai meme tentang berbagai error Google:\nKetika Menemukan Masalah Ketika menemukan masalah, coba cari di Google. Eh ternyata para insinyur Google juga sedang mencari solusi untuk menemukan masalah di Google.\nBagaimana Cara Memperbaiki Server? Laporan Error Google Kerjaannya Si Rubah Ni Solusi Buat Errornya Server Google Yang Ditunggu oleh Developer Frontend Google Selama Ini Siapa Ini yang Merusak Youtube? ","link":"https://belajarpemrograman.my.id/berbagai-jokes-yang-muncul-setelah-errornya-server-google/"},{"judul":"Membuat File HTML, CSS, dan JS, Lalu Menguploadnya ke Internet","isi":"Halo kawan-kawan programmer\u0026hellip; Ketemu lagi nih sama aku, Zen, yang akan berbagi pengetahuan seputar pemrograman. Karena tadi di Telegram, Bang Ian ada ngasih screenshot pakai Surge, aku pun penasaran dan ikut mencoba menggunakan Surge. Nah, Surge ini apa sih?\nSurge, bukan Surga ya\u0026hellip;\nJadi, Surge itu semacam penyimpanan HTML, CSS, dan JS, tapi yang merupakan keunggulannya adalah kita nggak perlu meninggalkan Terminal (kalau di Windows, namanya Command Prompt). Tentu ini berbeda dengan Github yang membuat kita perlu membuka github.com atau Vercel yang membuat kita perlu membuka vercel.com untuk integrasi dengan Git. Sebenarnya bisa aja sih Vercel pakai CLI. Tapi aku belum ada nyoba. Nanti mungkin kapan-kapan akan aku coba.\nNah, kalau kita mencoba menggunakan Surge ini, akan kelihatan banget deh bagaimana simpelnya dalam menggunakan Surge ini. Jadi, kita langsung kotorin tangan aja yok.\nKita buat dulu deh file index.html yang merupakan halaman pertama yang akan dilihat pengunjung saat datang ke website Surge kita. Nah, untuk permulaan ini, kita buat yang sederhana dulu aja. Anggap aja semacam Hello World-nya website lah. Atau mungkin juga bisa dibilang sebagai halaman portfolio kita. Hehehehehe.. (baru mulai juga, udah begayaan). Nah, isinya kayak gini:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Coba Pakai Surge\u0026lt;/title\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\u0026#34; integrity=\u0026#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;br\u0026gt; \u0026lt;h1 class=\u0026#34;text-center\u0026#34;\u0026gt;Hello World\u0026lt;/h1\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p\u0026gt;Ini adalah blog yang kubuat pakai Bootstrap\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Di situ, aku pakai Bootstrap versi 4 yang saat ini merupakai versi stable yang paling baru. Jadi, aku belum pakai versi 5 karena masih alpha atau sudah beta (aku nggak update infonya). Nah, di situ, tag HTML yang paling penting adalah:\n\u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34;\u0026gt; Karena tag itu yang menentukan apakah website kita responsive juga jika dibuka di layar kecil seperti layar HP. Jadi, itu tag HTML yang wajib ada ya. Oh iya, script Bootstrapnya aku ambil dengan kode berikut ini:\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\u0026#34; integrity=\u0026#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt; Kenapa nggak langsung download aja Bootstrapnya terus dipanggil dengan kode:\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;bootstrap.min.css\u0026#34;\u0026gt; Ya males aja sih. Hehehehe\u0026hellip;\nKemudian, untuk isi dari body, kelihatan banget aku menggunakan kode-kode Bootstrap:\n\u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;br\u0026gt; \u0026lt;h1 class=\u0026#34;text-center\u0026#34;\u0026gt;Hello World\u0026lt;/h1\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p\u0026gt;Ini adalah blog yang kubuat pakai Bootstrap\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; Untuk lebih nyaman dalam mengetik kode website, aku menggunakan text editor. Dan menurutku, yang paling ringan itu Sublime Text Editor. Kemudian, aku mengaktifkan package Bootstrap 4\nJadinya kayak gini:\nLalu, kita buat file bernama CNAME yang isinya:\npakai-surge.surge.sh Kita install Surge:\nnpm i -g surge --prefer-offline Di folder tempat kita meletakkan file HTML itu, jalankan perintah:\nsurge ./ Oh iya, kalau kamu baru pertama pakai Surge di laptop atau di HP saat ini, nanti diminta email dan password untuk mendaftar atau login ke Surge. Nah, jadinya kayak gini:\nWelcome to surge! (surge.sh) Login (or create surge account) by entering email \u0026amp; password. email: muhzaini30@gmail.com password: Running as muhzaini30@gmail.com (Student) project: ./ domain: pakai-surge.surge.sh upload: [====================] 100% eta: 0.0s (2 files, 579 bytes) CDN: [====================] 100% encryption: *.surge.sh, surge.sh (131 days) IP: 138.197.235.123 Success! - Published to pakai-surge.surge.sh Sudah. Dalam hitungan detik aja itu, website kita sudah terupload (kalau isinya baru sedikit sih. Hehehehe\u0026hellip;). Sekarang, kamu bisa lihat hasilnya di https://pakai-surge.surge.sh/.\nUntuk melihat semua domain Surge yang kita gunakan, cukup ketikkan perintah:\nsurge list Hasilnya:\n160***0993*** pakai-surge.surge.sh 12 minutes ago surge surge.sh Standard Baru satu eh. Baru buat untuk tutorial ini. Hehehehe\u0026hellip;\n","link":"https://belajarpemrograman.my.id/membuat-file-html-css-dan-js-lalu-menguploadnya-ke-internet/"},{"judul":"Cara Cepat Input Nilai Untuk Rekap Rapot","isi":"Klik link ini untuk mendownload aplikasinya: https://github.com/mzaini30/nilai/releases/download/1.0/nilai.hta\nDibuka.\nMasukkan nilainya. Pisah antarnilai dengan spasi:\nKlik Enter.\nMuncul hasilnya:\nCtrl C.\nBuka Excel, terus Ctrl V.\nJadinya gini:\nTerus, kalau mau pakai lagi aplikasinya, kembali ke aplikasi itu tadi, pencet Enter, maka akan kembali ke bagian input data.\n","link":"https://belajarpemrograman.my.id/cara-cepat-input-nilai-untuk-rekap-rapot/"},{"judul":"Timer","isi":" label, input { display: block; } input { width: 100%; padding: 10px; box-sizing: border-box; }  Timer Berapa Menit?    menit  \n new Vue({ el: \".vue\", delimiters: [\"\"], data: { waktu: \"\", sisa: \"\" }, methods: { mulaiHitung(){ this.sisa = this.waktu this.waktu = \"\" setInterval(this.interval, 60000) }, interval(){ if (this.sisa != 0){ this.sisa -= 1 console.log(this.sisa) } } } })  ","link":"https://belajarpemrograman.my.id/timer/"},{"judul":"Deteksi Jumlah Kata Di Editor Blogspot","isi":"Buka dashboard Blogspot, terus klik Buat Postingan Baru, atau bisa juga klik postingan yang mau diedit. Maka, akan muncul tampilan editor postingan baru yang sudah familiar:\nKemudian, reload halaman.\nTerus, pencet Ctrl Shift i. Maka, akan muncul DevTools:\nItu munculnya di bagian bawah ya.\nKlik Console:\nMasukkan kode berikut ini ke situ:\nfunction tampilKata(){ let banyak = document.querySelector(\u0026#39;iframe.editable\u0026#39;).contentDocument.body.innerText.split(\u0026#39; \u0026#39;).length banyak = banyak.toLocaleString(\u0026#39;id\u0026#39;) document.title = `${banyak}kata` } tampilKata() document.querySelector(\u0026#39;iframe.editable\u0026#39;).contentDocument.body.addEventListener(\u0026#39;keyup\u0026#39;, () =\u0026gt; { tampilKata() }) Pencet Enter.\nKalau sudah, kamu bisa menyembunyikan lagi DevTools-nya dengan cara pencet tanda silang di kanan atas DevTools, atau bisa juga dengan memencet Ctrl Shift i.\nNah sekarang, kamu bisa melihat hasilnya di tab browser:\n","link":"https://belajarpemrograman.my.id/deteksi-jumlah-kata-di-editor-blogspot/"},{"judul":"Membuat Fitur Pencarian Di Hugo","isi":"Menu pencarian di suatu blog adalah fitur yang sangat penting. Karena, fitur pencarian akan membuat pengunjung akan betah di blog kita, nggak lari ke mana-mana. Soalnya kan kalau bisa dicari di blog ini, buat apa dicari di tempat lain kan ya? Apalagi kalau blog kita itu laju, nggak pakai loading. Bisa karena kita menerapkan Single Page Application atau menggunakan Turbolinks untuk Multiple Page Application seperti di blog ini.\nNah, sekarang kita akan membuat fitur pencarian di Hugo. Hugo adalah salah satu Static Site Generator yang cukup terkenal selain Jekyll. Yang membuat Hugo terkenal adalah karena dibuat dengan bahasa pemrograman Go yang laju sehingga compile halaman Markdown menjadi HTML pun lebih cepat. Juga, Hugo mendukung Fast Render yang mirip kayak Hot Module Reload di bundler. Sehingga, tidak perlu meng-compile semua halaman untuk mendapatkan update HTML dari Markdown yang sedang kita edit. Jadi, cuma file-file tertentu saja yang di-update di sisi server Hugo.\nLogika Program Logika dalam membuat fitur pencarian ini adalah seperti ini:\n Kumpulkan semua postingan (judul, isi, link) dalam satu file JSON (situs.com/posts/index.json) Buat satu halaman untuk pencarian (situs.com/cari) Di halaman pencarian itu, kita buat program untuk mendapatkan file JSON lalu mecocokkannya sesuai dengan kata kunci yang kita cari  Sekarang kita mulai buat programnya.\nMulai Coding Pertama, kita setting dulu di config.toml untuk mengaktifkan templating di JSON:\n[outputs] section = [\u0026#34;html\u0026#34;, \u0026#34;rss\u0026#34;, \u0026#34;json\u0026#34;] Kemudian, kita buat template JSON di layouts/_default/list.json.json yang isinya:\n[ {{ range $index, $e := .Data.Pages }} {{ if $index }}, {{ end }} { \u0026#34;judul\u0026#34;: {{ .Title | jsonify }}, \u0026#34;isi\u0026#34;: {{ .Plain | jsonify }}, \u0026#34;link\u0026#34; : {{ .Permalink | jsonify }} } {{ end }} ] Jadinya:\n[ { \u0026#34;judul\u0026#34;: \u0026#34;Cari\u0026#34;, \u0026#34;isi\u0026#34;: \u0026#34; .cari { width: 100%; padding: .5rem; box-sizing: border-box; } Halo Halo Halo -- document.querySelector(\\\u0026#34;.formCari\\\u0026#34;).addEventListener(\\\u0026#34;submit\\\u0026#34;, (x) = { x.preventDefault() async function mulaiCari(){ let hasil = await fetch(\u0026#39;/posts/index.json\u0026#39;).then(x = x.json()) hasil = await hasil let yangDicari = document.querySelector(\u0026#39;.cari\u0026#39;).value.toLowerCase() hasil.map(x = { x.judulKecil = x.judul.toLowerCase() x.isiKecil = x.isi.toLowerCase() }) hasil = hasil.sort((x, y) = x.judul y.judul) let ketemu = [] for (let y of hasil){ if (y.judulKecil.includes(yangDicari) || y.isiKecil.includes(yangDicari)) { ketemu = [...ketemu, y] } } if (ketemu.length 0) { document.querySelector(\u0026#39;.hasil ol\u0026#39;).innerHTML = ketemu.map(x = `${x.judul}`).join(\u0026#39;\u0026#39;) } else { document.querySelector(\u0026#39;.hasil ol\u0026#39;).innerHTML = ` Nggak Ketemu ` } } mulaiCari() }) \u0026#34;, \u0026#34;link\u0026#34; : \u0026#34;http://localhost:1313/cari/\u0026#34; } , { \u0026#34;judul\u0026#34;: \u0026#34;Mengapa Perlu Membuat Blog Khusus Pemrograman\u0026#34;, \u0026#34;isi\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;link\u0026#34; : \u0026#34;http://localhost:1313/mengapa-perlu-membuat-blog-khusus-pemrograman/\u0026#34; } , { \u0026#34;judul\u0026#34;: \u0026#34;Tentang Penulis\u0026#34;, \u0026#34;isi\u0026#34;: \u0026#34;Penulis blog ini adalah Zen yang merupakan seorang mahasiswa Psikologi angkatan 2015 di Universitas Mulawarman. Dan lulus pada tahun 2020 dengan nilai lumayan lah walaupun nggak bisa sempurna. Soalnya menurutku, nilai yang baik itu harus yang sempurna, tanpa satupun kesalahan.\\nBlog ini aku dedikasikan untuk membagikan pengetahuan seputar pemrograman, mulai dari yang paling sederhana hingga yang tingkat rumit. Jadi, aku nggak khusus membahas yang sederhana semua atau yang rumit semua. Ya tergantung mood lah pengen nulis tentang apa.\\nDarimana aku belajar tentang pemrograman? Diawali dari kesukaanku akan segala hal yang berbau hacking pada waktu SMP, juga karena diajari cara membuat blog di Blogspot oleh Ustadz Reza. Maka, aku pun mulai tertarik dengan dunia pemrograman. Waktu itu aku sering beli buku-buku Jasakom, terutama yang ngoprek Windows dan tentang jaringan. Dua topik itu sekarang sudah jarang banget sih aku gali karena aku sekarang pakai Linux dan nggak main tentang jaringan lagi.\\n\u0026#34;, \u0026#34;link\u0026#34; : \u0026#34;http://localhost:1313/tentang-penulis/\u0026#34; } , { \u0026#34;judul\u0026#34;: \u0026#34;Sikap Yang Sebaiknya Dimiliki Programmer\u0026#34;, \u0026#34;isi\u0026#34;: \u0026#34;Pantang Menyerah Nggak Mudah Mengeluh Tetap Diam Selalu Update Pengetahuan \u0026#34;, \u0026#34;link\u0026#34; : \u0026#34;http://localhost:1313/sikap-yang-sebaiknya-dimiliki-programmer/\u0026#34; } ] Kemudian kita buat shortcode supaya bisa menyisipkan HTML di dalam postingan. Nah, tuliskan kode berikut di layouts/shortcodes/html.html:\n{{ .Inner }} Baru kita buat postingan baru dengan perintah:\nhugo new posts/cari.md Maka akan terbentuk content/posts/cari.md. Nah, kemudian kita edit dan diisi dengan:\n--- title: \u0026#34;Cari\u0026#34; date: 2020-12-09T09:38:59Z draft: false description: Cari apa? tags: - --- {{\u0026lt;html\u0026gt;}} \u0026lt;style\u0026gt; .cari { width: 100%; padding: .5rem; box-sizing: border-box; } \u0026lt;/style\u0026gt; \u0026lt;form class=\u0026#34;formCari\u0026#34;\u0026gt; \u0026lt;input class=\u0026#34;cari\u0026#34; placeholder=\u0026#34;Cari apa?\u0026#34; required\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;div class=\u0026#34;hasil\u0026#34;\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;!-- \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/\u0026#34;\u0026gt;Halo\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/\u0026#34;\u0026gt;Halo\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;/\u0026#34;\u0026gt;Halo\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; --\u0026gt; \u0026lt;/ol\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; document.querySelector(\u0026#34;.formCari\u0026#34;).addEventListener(\u0026#34;submit\u0026#34;, (x) =\u0026gt; { x.preventDefault() async function mulaiCari(){ let hasil = await fetch(\u0026#39;/posts/index.json\u0026#39;).then(x =\u0026gt; x.json()) hasil = await hasil let yangDicari = document.querySelector(\u0026#39;.cari\u0026#39;).value.toLowerCase() hasil.map(x =\u0026gt; { x.judulKecil = x.judul.toLowerCase() x.isiKecil = x.isi.toLowerCase() }) hasil = hasil.sort((x, y) =\u0026gt; x.judul \u0026gt; y.judul) let ketemu = [] for (let y of hasil){ if (y.judulKecil.includes(yangDicari) || y.isiKecil.includes(yangDicari)) { ketemu = [...ketemu, y] } } if (ketemu.length \u0026gt; 0) { document.querySelector(\u0026#39;.hasil ol\u0026#39;).innerHTML = ketemu.map(x =\u0026gt; `\u0026lt;li\u0026gt;\u0026lt;a href=\u0026#39;${x.link}\u0026#39;\u0026gt;${x.judul}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;`).join(\u0026#39;\u0026#39;) } else { document.querySelector(\u0026#39;.hasil ol\u0026#39;).innerHTML = ` \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#39;/cari\u0026#39;\u0026gt;Nggak Ketemu\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; ` } } mulaiCari() }) \u0026lt;/script\u0026gt; {{\u0026lt;/html\u0026gt;}} Pada script di atas, aku menggunakan sedikit teknik JavaScript untuk mempermudah aku mengaplikasikan logika yang telah kususun sebelumnya. Di situ, aku nggak menggunakan framework JavaScript seperti Vue dan Angular JS, library JavaScript seperti React dan Alpine JS, juga nggak menggunakan compiler JavaScript seperti Svelte.\nKenapa sih aku mesti repot-repot menggunakan Vanilla JS dibandingkan menggunakan framework JavaScript yang sudah terkenal? Ya karena mau sederhana aja sih. Nggak ribet-ribet fungsinya. Cuma untuk mendapatkan data JSON, mengolahnya, lalu menampilkannya. Nah, sekarang coba deh kita bahas.\nPembahasan Program Pertama, aku menggunakan addEventListener untuk mendapatkan event submit dari form. Kenapa sih aku nggak menggunakan attribute onsubmit? Karena aku ingin menghadirkan preventDefault yang nggak bisa jalan kalau di onsubmit.\nNah, kodenya itu seperti ini plus dengan preventDefault:\ndocument.querySelector(\u0026#34;.formCari\u0026#34;).addEventListener(\u0026#34;submit\u0026#34;, (x) =\u0026gt; { x.preventDefault() }) Lalu, aku menggunakan async/await untuk melakukan fetch ke file JSON yang telah kita buat tadi. Secara umum, teknik async/await untuk fetch itu seperti ini:\nasync function jalankanFetch(){ let datanya = await fetch(\u0026#39;http://situs.com/data.json\u0026#39;).then(x =\u0026gt; x.json()) datanya = await datanya console.log(datanya) } jalankanFetch() Logika fetch dengan async/await tampak pada kode bagian ini:\nasync function mulaiCari(){ let hasil = await fetch(\u0026#39;/posts/index.json\u0026#39;).then(x =\u0026gt; x.json()) hasil = await hasil // dst } mulaiCari() Maka, hasil dari /posts/index.json disimpan pada variabel hasil.\nLalu, kita buat variabel yangDicari yang isinya adalah kata kunci yang kita cari, lalu dikecilkan hurufnya (lowercase):\nlet yangDicari = document.querySelector(\u0026#39;.cari\u0026#39;).value.toLowerCase() Terus, yang hasil tadi, kita buat key baru bernama judulKecil yang merupakan nilai dari key judul yang dikecilkan. Dan juga, kita membuat key isiKecil yang merupakan nilai dari isi yang dikecilkan. Lalu, semua nilai dari hasil, kita urutkan berdasarkan key judul:\nhasil.map(x =\u0026gt; { x.judulKecil = x.judul.toLowerCase() x.isiKecil = x.isi.toLowerCase() }) hasil = hasil.sort((x, y) =\u0026gt; x.judul \u0026gt; y.judul) Kemudian, kita buat variabel ketemu yang akan menampung semua nilai yang cocok dengan kata kunci:\nlet ketemu = [] Lalu, kita cocok-cocokkan deh. Kalau sesuai, masukkan ke array ketemu:\nfor (let y of hasil){ if (y.judulKecil.includes(yangDicari) || y.isiKecil.includes(yangDicari)) { ketemu = [...ketemu, y] } } Kemudian, kita tampilkan hasilnya:\nif (ketemu.length \u0026gt; 0) { document.querySelector(\u0026#39;.hasil ol\u0026#39;).innerHTML = ketemu.map(x =\u0026gt; `\u0026lt;li\u0026gt;\u0026lt;a href=\u0026#39;${x.link}\u0026#39;\u0026gt;${x.judul}\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;`).join(\u0026#39;\u0026#39;) } else { document.querySelector(\u0026#39;.hasil ol\u0026#39;).innerHTML = ` \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#39;/cari\u0026#39;\u0026gt;Nggak Ketemu\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; ` } ","link":"https://belajarpemrograman.my.id/membuat-fitur-pencarian-di-hugo/"},{"judul":"Cari","isi":"  .cari { width: 100%; padding: .5rem; box-sizing: border-box; }    Halo Halo Halo --    document.querySelector(\".formCari\").addEventListener(\"submit\", (x) = { x.preventDefault() async function mulaiCari(){ let hasil = await fetch('/posts/index.json').then(x = x.json()) hasil = await hasil let yangDicari = document.querySelector('.cari').value.toLowerCase() hasil.map(x = { x.judulKecil = x.judul.toLowerCase() x.isiKecil = x.isi.toLowerCase() }) hasil = hasil.sort((x, y) = x.judul  y.judul) let ketemu = [] for (let y of hasil){ if (y.judulKecil.includes(yangDicari) || y.isiKecil.includes(yangDicari)) { ketemu = [...ketemu, y] } } if (ketemu.length  0) { document.querySelector('.hasil ol').innerHTML = ketemu.map(x = `${x.judul}`).join('') } else { document.querySelector('.hasil ol').innerHTML = ` Nggak Ketemu ` } } mulaiCari() })  ","link":"https://belajarpemrograman.my.id/cari/"},{"judul":"Mengapa Perlu Membuat Blog Khusus Pemrograman","isi":"Aku memulai perjalanan sebagai blogger sebenarnya sudah sangat lama. Dari SMP, sejak pertama aku dikenalkan dengan Blogspot oleh guruku. Waktu itu, nama blognya Zainitopia. Aku terinspirasi pada sebuah dunia yang utopis sehingga aku menginginkan dengan adanya blogku ini akan membuat tercapainya suatu dunia yang harmonis tanpa perpecahan.\nAmin.\nItu permulaan. Kemudian, karena ternyata membuat blog itu mudah, aku pun membuat lagi, lagi, dan lagi. Hingga akhirnya, aku sempat menghitung bahwa aku sudah membuat 20-an blog yang semuanya aktif dengan berbagai platform (Blogspot, Wordpress, Blog Detik, My Wap Blog, XTGem, Tumblr, dll). Walaupun sudah memiliki banyak blog, aku terus membuat lagi dan lagi hingga sekarang udah nggak tau berapa blog yang kupunya.\nTentu saja, yang paling berkesan itu saat blogging dengan My Wap Blog. Karena, di platform itulah, kemampuan CSS-ku berkembang. Nah, berbeda dengan Blogspot yang templatenya merupakan campuran dari HTML, CSS, dan Javascript yang dikompilasi menjadi sebuah file XML ala Blogspot. Kalau di My Wap Blog, kita cuma bisa edit CSS-nya. Contohnya aja seperti ini:\nbody { background: blue; } .content { color: red; } Atau, bisa juga dengan import CSS:\n@import url(\u0026#34;https://situs.com/spiderman.css\u0026#34;) Apakah kamu juga mantan pengguna My Wap Blog? Seru kan ya zaman dulu itu. Kalau nggak salah, developernya itu namanya Arvin Gupta. Orang India. CMIIW. Nah, alasan mengapa My Wap Blog itu ditutup adalah karena nggak kuat pembiayaan. Padahal simpel aja loh sistemnya My Wap Blog itu. Tapi powerful banget, ada fitur follow blog, chatting, bahkan ada fitur blog-blog dan postingan-postingan yang lagi populer. Banyak juga loh yang dakwah di situ. Beda sama Blogspot maupun Wordpress yang powerful namun nggak sederhana. Beda sama My Wap Blog yang bentuknya kayak website tradisional. Nggak berat. Jadi, nyaman main My Wap Blog di Opera Mini.\nNah, dari situlah aku tertarik dengan dunia frontend, suatu dunia yang menyajikan tampilan website kepada pengunjung.\nLalu, sejak aku mengenal cara membuat custom domain, aku pun mulai membeli domain-domain yang menurutku cantik. Dan tentu saja kebanyakan sudah mati domainnya karena nggak kuperpanjang. Hehehehe\u0026hellip; Kemudian, aku pun kepikiran untuk membuat blog khusus pemrograman yang menjadi blog ini.\nLalu, Mengapa Harus Khusus Blog Pemrograman? Aku mungkin nggak terlalu membahas dari sisi SEO karena aku nggak terlalu ahli dalam SEO. Blog ini aja DA-nya masih 0. Masih belum bisa dapat job. Tapi nantinya kalau misalnya jobnya nggak ada sangkut pautnya sama pemrograman, nggak bakalan kuterima. Demi menjaga kenyamanan pengunjung di blog ini.\nNah sekarang coba bayangkan dengan sebuah toko. Entah itu toko baju atau toko sepatu. Apa yang kamu bayangkan ketika memasukinya? Misalnya aja toko baju, tentu yang kamu dapatkan adalah baju-baju yang terpajang di display. Ada juga celana, jaket, jumper, hoodie, dan jenis-jenis pakaian lainnya hingga pada suatu titik yang menarik perhatianmu: diskon!!\nCoba bayangkan sebuah toko yang bernama toko baju, namun berisi sayur, ban dalam sepeda, batu bata, dan segala macam yang nggak berkaitan sama baju. Eh, ada baju juga sih. Tapi intinya campur aduk deh semuanya ada di situ. Lalu, kamu pun mendatangi ownernya: Kok kamu kayak gini sih? Owner pun menjawab:\n Aku menjual segala hal yang aku suka\n Mirip ya sama kata-kata:\n Aku menulis segala hal yang ingin aku tulis\n Hehehhee\u0026hellip;\nNah, kali ini kita akan masuk ke pembahasan blog. Di sini, aku mengibaratkan sebuah blog itu seperti sebuah toko. Kalau blog tentang pakaian ya postingannya tentu tentang pakaian. Kalau blog tentang makan-makan ya pastinya blognya tentang makan-makan. Kan nggak enak ya blog tentang makan-makan tapi isinya tentang pemrograman. Istilahnya itu kayak orang lagi laper, datang ke warung Nasi Padang, eh malah disuguhkan berbagai jenis iPhone. Ya nggak nyambung lah.\nMaka, aku pun ingin memfokuskan suatu blog yang isinya tentang pemrograman. Entah nanti kalau misalnya mulai melenceng, setidaknya masih dalam ruang lingkup pemrograman. Mungkin kalau dalam bentuk fisiknya, blog ini seperti tempat kursus pemrograman yang konten-kontennya akan membuat kita asyik mempelajari pemrograman.\nTerus, gimana kalau mau nulis tentang yang lain? Ya pastinya buat blog baru. Tapi itu nggak efektif banget. Bayangkan aja, kamu punya sebuah toko yang megah, yang kamu rawat bertahun-tahun, terus kamu bosen dan ingin mendirikan toko baru lagi. Asli eh, nggak efektif banget. Mending fokus aja memperbesar satu blog yang kita miliki.\nInspirasi Tulisan Ini Tulisan ini terinspirasi dari toko sepeda milik orang tua. Dari tahun 1996 (sekitar itu seingatku) sampai sekarang, ya bentuknya cuma toko sepeda dan yang dijual cuma sepeda. Lalu, karena orang tua senantiasa konsisten memperbesar toko sepeda ini, akhirnya para customer hapalnya ya kalau toko sepeda yang toko orang tuaku itu, sehingga pembeli pun akan semakin banyak karena berlaku sebuah istilah yang para marketing sebut sebagai Word of Mouth (yaitu kekuatan dark mulut ke mulut) yang menunjukkan betapa besar integritas yang kita miliki.\nApakah merasa bosan? Mungkin sih. Aku nggak tau juga. Tapi, karena terus konsisten melakukan kegiatan yang itu-itu aja (bongkar sepeda, rakit sepeda, setel sepeda, bersihkan sepeda). Sehingga akhirnya, toko ini pun semakin besar dan bisa memberikan manfaat kepada setiap orang.\nNah, bagaimana dengan blog kita? Apakah kita bisa berfokus untuk membesarkan satu blog kita ataukah kita tertarik untuk membuat blog baru lagi?\nApa Aja yang Nanti Akan Kubahas di Blog Ini? Tentu segala hal yang berkaitan dengan pemrograman yang meliputi:\n Membahas framework tertentu Membahas bahasa pemrograman tertentu Pengalaman dalam menjalani kehidupan sebagai programmer Tentu postingannya pakai Linux laptopnya (aku nggak punya laptop Windows) Aku nggak akan posting hal ilegal lagi kayak pembajakan karya (supaya diterima Adsense. Hehehhee\u0026hellip;) Apa lagi ya? Oh iya, nanti kalian request deh biar aku buat postingannya Mungkin nanti, aku akan pasang tombol donasi di sini, terus kalian bisa komentar di donasinya. Nah, nanti akan aku jawabin komentar kalian di postingan blog ini  Semoga tulisan ini bisa menginspirasi walaupun memang kata-kataku belum terlalu bagus jika dibandingkan dengan para blogger lain yang sudah terbiasa menulis (kalau aku biasanya nulis kode aja sih). Jadi, bisa dibilang, tulisan ini semacam README bagi blog ini. Simpel, tapi berfungsi sebagai apa sih yang ingin kubahas di blog ini? Nah, seperti itu.\nJadi, aku akan terus mencoba untuk menyajikan yang terbaik bagi kawan semua. Semoga dengan adanya blog ini, bangsa ini bisa maju dan bangkit, serta nggak minder dibandingkan programmer-programmer lainnya di luar negeri. Toh, kita semua sama aja. Entah itu programmer Amerika atau programmer India yang suka buat video, kita semua sama aja asalkan kita mulai membuat sesuatu. Dimulai dari Hello World!\nItu.\n","link":"https://belajarpemrograman.my.id/mengapa-perlu-membuat-blog-khusus-pemrograman/"},{"judul":"Tentang Penulis","isi":"Penulis blog ini adalah Zen yang merupakan seorang mahasiswa Psikologi angkatan 2015 di Universitas Mulawarman. Dan lulus pada tahun 2020 dengan nilai lumayan lah walaupun nggak bisa sempurna. Soalnya menurutku, nilai yang baik itu harus yang sempurna, tanpa satupun kesalahan.\nBlog ini aku dedikasikan untuk membagikan pengetahuan seputar pemrograman, mulai dari yang paling sederhana hingga yang tingkat rumit. Jadi, aku nggak khusus membahas yang sederhana semua atau yang rumit semua. Ya tergantung mood lah pengen nulis tentang apa.\nDarimana aku belajar tentang pemrograman? Diawali dari kesukaanku akan segala hal yang berbau hacking pada waktu SMP, juga karena diajari cara membuat blog di Blogspot oleh Ustadz Reza. Maka, aku pun mulai tertarik dengan dunia pemrograman. Waktu itu aku sering beli buku-buku Jasakom, terutama yang ngoprek Windows dan tentang jaringan. Dua topik itu sekarang sudah jarang banget sih aku gali karena aku sekarang pakai Linux dan nggak main tentang jaringan lagi.\n","link":"https://belajarpemrograman.my.id/tentang-penulis/"}]